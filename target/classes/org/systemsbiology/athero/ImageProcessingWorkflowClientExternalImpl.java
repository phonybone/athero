/*
 * This code was generated by AWS Flow Framework Annotation Processor.
 * Refer to Amazon Simple Workflow Service documentation at http://aws.amazon.com/documentation/swf 
 *
 * Any changes made directly to this file will be lost when 
 * the code is regenerated.
 */
 package org.systemsbiology.athero;

import com.amazonaws.services.simpleworkflow.flow.DataConverter;
import com.amazonaws.services.simpleworkflow.flow.StartWorkflowOptions;
import com.amazonaws.services.simpleworkflow.flow.WorkflowClientExternalBase;
import com.amazonaws.services.simpleworkflow.flow.generic.GenericWorkflowClientExternal;
import com.amazonaws.services.simpleworkflow.model.WorkflowExecution;
import com.amazonaws.services.simpleworkflow.model.WorkflowType;

class ImageProcessingWorkflowClientExternalImpl extends WorkflowClientExternalBase implements ImageProcessingWorkflowClientExternal {

    public ImageProcessingWorkflowClientExternalImpl(WorkflowExecution workflowExecution, WorkflowType workflowType, 
            StartWorkflowOptions options, DataConverter dataConverter, GenericWorkflowClientExternal genericClient) {
        super(workflowExecution, workflowType, options, dataConverter, genericClient);
    }

    @Override
    public void processImage(String sourceBucketName, String sourceFilename, String targetBucketName, org.systemsbiology.athero.ImageProcessingOption option) { 
        processImage(sourceBucketName, sourceFilename, targetBucketName, option, null);
    }

    @Override
    public void processImage(String sourceBucketName, String sourceFilename, String targetBucketName, org.systemsbiology.athero.ImageProcessingOption option, StartWorkflowOptions startOptionsOverride) {
    
        Object[] _arguments_ = new Object[4]; 
        _arguments_[0] = sourceBucketName;
        _arguments_[1] = sourceFilename;
        _arguments_[2] = targetBucketName;
        _arguments_[3] = option;
        dynamicWorkflowClient.startWorkflowExecution(_arguments_, startOptionsOverride);
    }


}